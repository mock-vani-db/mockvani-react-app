{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhire\\\\mock-vani\\\\mock-vani-interview-survey-app\\\\client\\\\src\\\\components\\\\FormPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport QuestionSection from \"./QuestionSection\";\nimport SuccessModal from \"./SuccessModal\";\nimport \"../styles/FormPage.css\"; // Updated CSS import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormPage() {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    askedQuestion: {\n      question: \"\",\n      industry: \"\",\n      company: \"\",\n      designation: \"\",\n      yearsExperience: \"\",\n      year: \"\"\n    },\n    receivedQuestion: {\n      question: \"\",\n      industry: \"\",\n      company: \"\",\n      designation: \"\",\n      yearsExperience: \"\",\n      year: \"\"\n    },\n    receiveUpdates: false\n  });\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\n  const handleChange = (section, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: value\n      }\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"Form Data Submitted:\", formData); // Replace with API call\n    setIsSuccessModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"form-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mock Vani Interview Survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Share the most interesting interview questions you\\u2019ve encountered!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-card\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              style: {\n                fontFamily: \"Arial\"\n              },\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: formData.email,\n              onChange: e => setFormData({\n                ...formData,\n                email: e.target.value\n              }),\n              placeholder: \"Enter your email\",\n              className: \"form-input\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionSection, {\n            title: \"As an Interviewer\",\n            placeholderQuestion: \"Hello World!\",\n            section: \"askedQuestion\",\n            data: formData.askedQuestion,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionSection, {\n            title: \"As an Interviewee\",\n            placeholderQuestion: \"World Hello!\",\n            section: \"receivedQuestion\",\n            data: formData.receivedQuestion,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section form-updates\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: formData.receiveUpdates,\n                onChange: e => setFormData({\n                  ...formData,\n                  receiveUpdates: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), \"Receive Updates\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-button\",\n              children: \"Submit Responses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"form-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA9 \", new Date().getFullYear(), \" Mock Vani. All rights reserved.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), isSuccessModalOpen && /*#__PURE__*/_jsxDEV(SuccessModal, {\n      message: \"Your response has been recorded successfully!\",\n      onClose: () => setIsSuccessModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(FormPage, \"KulfMP0CvMSIyHgmdpYVk8FIaRY=\");\n_c = FormPage;\nvar _c;\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"names":["React","useState","QuestionSection","SuccessModal","jsxDEV","_jsxDEV","FormPage","_s","formData","setFormData","email","askedQuestion","question","industry","company","designation","yearsExperience","year","receivedQuestion","receiveUpdates","isSuccessModalOpen","setIsSuccessModalOpen","handleChange","section","field","value","prev","handleSubmit","e","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","fontFamily","type","onChange","target","placeholder","required","title","placeholderQuestion","data","checked","Date","getFullYear","message","onClose","_c","$RefreshReg$"],"sources":["C:/Users/dhire/mock-vani/mock-vani-interview-survey-app/client/src/components/FormPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport QuestionSection from \"./QuestionSection\";\r\nimport SuccessModal from \"./SuccessModal\";\r\nimport \"../styles/FormPage.css\"; // Updated CSS import\r\n\r\nexport default function FormPage() {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    askedQuestion: {\r\n      question: \"\",\r\n      industry: \"\",\r\n      company: \"\",\r\n      designation: \"\",\r\n      yearsExperience: \"\",\r\n      year: \"\",\r\n    },\r\n    receivedQuestion: {\r\n      question: \"\",\r\n      industry: \"\",\r\n      company: \"\",\r\n      designation: \"\",\r\n      yearsExperience: \"\",\r\n      year: \"\",\r\n    },\r\n    receiveUpdates: false,\r\n  });\r\n\r\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\r\n\r\n  const handleChange = (section, field, value) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [section]: {\r\n        ...prev[section],\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Form Data Submitted:\", formData); // Replace with API call\r\n    setIsSuccessModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-page\">\r\n      <header className=\"form-header\">\r\n        <h1>Mock Vani Interview Survey</h1>\r\n        <p>Share the most interesting interview questions youâ€™ve encountered!</p>\r\n      </header>\r\n\r\n      <main className=\"form-container\">\r\n        <div className=\"form-card\">\r\n          <form onSubmit={handleSubmit}>\r\n            {/* Email Section */}\r\n            <div className=\"form-section\">\r\n              <label className=\"form-label\" style={{ fontFamily: \"Arial\" }}>Email Address</label>\r\n              <input\r\n                type=\"email\"\r\n                value={formData.email}\r\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n                placeholder=\"Enter your email\"\r\n                className=\"form-input\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {/* Interviewer Section */}\r\n            <QuestionSection\r\n              title=\"As an Interviewer\"\r\n              placeholderQuestion=\"Hello World!\"\r\n              section=\"askedQuestion\"\r\n              data={formData.askedQuestion}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            {/* Interviewee Section */}\r\n            <QuestionSection\r\n              title=\"As an Interviewee\"\r\n              placeholderQuestion=\"World Hello!\"\r\n              section=\"receivedQuestion\"\r\n              data={formData.receivedQuestion}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            {/* Receive Updates */}\r\n            <div className=\"form-section form-updates\">\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={formData.receiveUpdates}\r\n                  onChange={(e) => setFormData({ ...formData, receiveUpdates: e.target.checked })}\r\n                />\r\n                Receive Updates\r\n              </label>\r\n            </div>\r\n\r\n            {/* Submit Button */}\r\n            <div className=\"form-actions\">\r\n              <button type=\"submit\" className=\"submit-button\">\r\n                Submit Responses\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </main>\r\n\r\n      <footer className=\"form-footer\">\r\n        <p>&copy; {new Date().getFullYear()} Mock Vani. All rights reserved.</p>\r\n      </footer>\r\n\r\n      {isSuccessModalOpen && (\r\n        <SuccessModal\r\n          message=\"Your response has been recorded successfully!\"\r\n          onClose={() => setIsSuccessModalOpen(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}