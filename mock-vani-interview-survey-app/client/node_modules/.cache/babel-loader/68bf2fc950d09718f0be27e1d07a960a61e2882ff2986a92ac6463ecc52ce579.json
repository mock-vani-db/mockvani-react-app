{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhire\\\\mock-vani\\\\mock-vani-interview-survey-app\\\\client\\\\src\\\\components\\\\FormPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Filter from \"bad-words\";\nimport QuestionSection from \"./QuestionSection\";\nimport SuccessModal from \"./SuccessModal\";\nimport \"../styles/FormPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormPage() {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    askedQuestion: {\n      question: \"\",\n      industry: \"\",\n      company: \"\",\n      designation: \"\",\n      yearsExperience: \"\",\n      year: \"\"\n    },\n    receivedQuestion: {\n      question: \"\",\n      industry: \"\",\n      company: \"\",\n      designation: \"\",\n      yearsExperience: \"\",\n      year: \"\"\n    },\n    receiveUpdates: false\n  });\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\n  const handleChange = (section, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: value\n      }\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const filter = new Filter();\n\n    // Check for profanity\n    if (filter.isProfane(formData.askedQuestion.question) || filter.isProfane(formData.receivedQuestion.question)) {\n      alert(\"Your submission contains inappropriate language. Please revise it.\");\n      return;\n    }\n\n    // Check for valid email\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      alert(\"Please enter a valid email address.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:4000/submit\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        setIsSuccessModalOpen(true);\n      } else {\n        console.error(\"Failed to submit data:\", response.statusText);\n        alert(\"There was an error submitting your data. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error while submitting data:\", error);\n      alert(\"An unexpected error occurred. Please check your network connection and try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label-inline\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: formData.email,\n          onChange: e => setFormData({\n            ...formData,\n            email: e.target.value\n          }),\n          placeholder: \"Drop your email here\",\n          className: \"form-input-inline\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit Responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(FormPage, \"WUK0q4sH6PBLdxqBVk4uQO4EVF4=\");\n_c = FormPage;\nvar _c;\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"names":["React","useState","Filter","QuestionSection","SuccessModal","jsxDEV","_jsxDEV","FormPage","_s","formData","setFormData","email","askedQuestion","question","industry","company","designation","yearsExperience","year","receivedQuestion","receiveUpdates","isSuccessModalOpen","setIsSuccessModalOpen","handleChange","section","field","value","prev","handleSubmit","e","preventDefault","filter","isProfane","alert","emailRegex","test","response","fetch","method","headers","body","JSON","stringify","ok","console","error","statusText","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/dhire/mock-vani/mock-vani-interview-survey-app/client/src/components/FormPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Filter from \"bad-words\";\r\nimport QuestionSection from \"./QuestionSection\";\r\nimport SuccessModal from \"./SuccessModal\";\r\nimport \"../styles/FormPage.css\";\r\n\r\nexport default function FormPage() {\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        askedQuestion: {\r\n            question: \"\",\r\n            industry: \"\",\r\n            company: \"\",\r\n            designation: \"\",\r\n            yearsExperience: \"\",\r\n            year: \"\",\r\n        },\r\n        receivedQuestion: {\r\n            question: \"\",\r\n            industry: \"\",\r\n            company: \"\",\r\n            designation: \"\",\r\n            yearsExperience: \"\",\r\n            year: \"\",\r\n        },\r\n        receiveUpdates: false,\r\n    });\r\n\r\n    const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\r\n\r\n    const handleChange = (section, field, value) => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            [section]: {\r\n                ...prev[section],\r\n                [field]: value,\r\n            },\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const filter = new Filter();\r\n\r\n        // Check for profanity\r\n        if (\r\n            filter.isProfane(formData.askedQuestion.question) ||\r\n            filter.isProfane(formData.receivedQuestion.question)\r\n        ) {\r\n            alert(\"Your submission contains inappropriate language. Please revise it.\");\r\n            return;\r\n        }\r\n\r\n        // Check for valid email\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailRegex.test(formData.email)) {\r\n            alert(\"Please enter a valid email address.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:4000/submit\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setIsSuccessModalOpen(true);\r\n            } else {\r\n                console.error(\"Failed to submit data:\", response.statusText);\r\n                alert(\"There was an error submitting your data. Please try again.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error while submitting data:\", error);\r\n            alert(\"An unexpected error occurred. Please check your network connection and try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-page\">\r\n            {/* Your existing form layout */}\r\n            <form onSubmit={handleSubmit}>\r\n                {/* Email Section */}\r\n                <div className=\"form-section-inline\">\r\n                    <label className=\"form-label-inline\">Email Address</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        value={formData.email}\r\n                        onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n                        placeholder=\"Drop your email here\"\r\n                        className=\"form-input-inline\"\r\n                        required\r\n                    />\r\n                </div>\r\n                {/* Add other form fields */}\r\n                <button type=\"submit\" className=\"submit-button\">Submit Responses</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}