{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhire\\\\mock-vani\\\\mock-vani-interview-survey-app\\\\client\\\\src\\\\components\\\\InsightsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../styles/InsightsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InsightsPage() {\n  _s();\n  var _insights$industrySpr, _insights$topCompanie, _insights$topQuestion;\n  const [insights, setInsights] = useState({\n    totalSubmissions: 0,\n    industrySpread: [],\n    topCompanies: [],\n    topQuestions: []\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchInsights() {\n      try {\n        const response = await fetch(\"http://localhost:4000/insights\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch insights\");\n        }\n        const data = await response.json();\n        console.log(\"Fetched insights:\", data); // Log insights data\n        setInsights(data);\n      } catch (error) {\n        console.error(\"Error fetching insights:\", error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchInsights();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading insights...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  if (!insights) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Failed to load insights.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insights-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"insight\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Total Submissions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: insights.totalSubmissions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"insight\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Industry Spread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_insights$industrySpr = insights.industrySpread) === null || _insights$industrySpr === void 0 ? void 0 : _insights$industrySpr.map((industry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [industry.InterviewForIndustry, \": \", industry.count]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"insight\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Top Companies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_insights$topCompanie = insights.topCompanies) === null || _insights$topCompanie === void 0 ? void 0 : _insights$topCompanie.map((company, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [company.InterviewForCompany, \": \", company.count]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"insight\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Most Interesting Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_insights$topQuestion = insights.topQuestions) === null || _insights$topQuestion === void 0 ? void 0 : _insights$topQuestion.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\\"\", question.InterestingQuestionAsked, \"\\\" from \", question.InterviewForCompany]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(InsightsPage, \"YDNeCAj61TZsF7OE7pR1KdqqtHI=\");\n_c = InsightsPage;\nvar _c;\n$RefreshReg$(_c, \"InsightsPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","InsightsPage","_s","_insights$industrySpr","_insights$topCompanie","_insights$topQuestion","insights","setInsights","totalSubmissions","industrySpread","topCompanies","topQuestions","loading","setLoading","fetchInsights","response","fetch","ok","Error","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","industry","index","InterviewForIndustry","count","company","InterviewForCompany","question","InterestingQuestionAsked","_c","$RefreshReg$"],"sources":["C:/Users/dhire/mock-vani/mock-vani-interview-survey-app/client/src/components/InsightsPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/InsightsPage.css\";\r\n\r\nexport default function InsightsPage() {\r\n  const [insights, setInsights] = useState({\r\n    totalSubmissions: 0,\r\n    industrySpread: [],\r\n    topCompanies: [],\r\n    topQuestions: [],\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchInsights() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:4000/insights\");\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch insights\");\r\n        }\r\n        const data = await response.json();\r\n        console.log(\"Fetched insights:\", data); // Log insights data\r\n        setInsights(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching insights:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchInsights();\r\n  }, []);\r\n  \r\n\r\n  if (loading) return <div>Loading insights...</div>;\r\n  if (!insights) return <div>Failed to load insights.</div>;\r\n\r\n  return (\r\n    <div className=\"insights-page\">\r\n      <h1>Insights</h1>\r\n\r\n      <div className=\"insight\">\r\n        <h2>Total Submissions</h2>\r\n        <p>{insights.totalSubmissions}</p>\r\n      </div>\r\n\r\n      <div className=\"insight\">\r\n        <h2>Industry Spread</h2>\r\n        <ul>\r\n          {insights.industrySpread?.map((industry, index) => (\r\n            <li key={index}>\r\n              {industry.InterviewForIndustry}: {industry.count}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"insight\">\r\n        <h2>Top Companies</h2>\r\n        <ul>\r\n          {insights.topCompanies?.map((company, index) => (\r\n            <li key={index}>\r\n              {company.InterviewForCompany}: {company.count}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"insight\">\r\n        <h2>Most Interesting Questions</h2>\r\n        <ul>\r\n          {insights.topQuestions?.map((question, index) => (\r\n            <li key={index}>\r\n              \"{question.InterestingQuestionAsked}\" from {question.InterviewForCompany}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}