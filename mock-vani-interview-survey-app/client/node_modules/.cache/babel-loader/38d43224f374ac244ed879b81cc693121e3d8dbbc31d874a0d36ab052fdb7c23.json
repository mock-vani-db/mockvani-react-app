{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhire\\\\mock-vani\\\\mock-vani-interview-survey-app\\\\client\\\\src\\\\components\\\\FormPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport QuestionSection from \"./QuestionSection\";\nimport SuccessModal from \"./SuccessModal\";\nimport \"../styles/FormPage.css\"; // Import specific styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormPage() {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    askedQuestion: {\n      question: \"\",\n      industry: \"\",\n      company: \"\",\n      year: \"\"\n    },\n    receivedQuestion: {\n      question: \"\",\n      industry: \"\",\n      company: \"\",\n      year: \"\"\n    }\n  });\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\n  const handleChange = (section, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: value\n      }\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"Form Submitted\", formData); // Replace with API call\n    setIsSuccessModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"form-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mock Vani Interview Survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Share the most interesting interview questions you\\u2019ve encountered!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: formData.email,\n            onChange: e => setFormData({\n              ...formData,\n              email: e.target.value\n            }),\n            placeholder: \"Enter your email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuestionSection, {\n          title: \"As an Interviewer\",\n          section: \"askedQuestion\",\n          data: formData.askedQuestion,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuestionSection, {\n          title: \"As an Interviewee\",\n          section: \"receivedQuestion\",\n          data: formData.receivedQuestion,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Submit Responses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"form-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA9 \", new Date().getFullYear(), \" Mock Vani. All rights reserved.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), isSuccessModalOpen && /*#__PURE__*/_jsxDEV(SuccessModal, {\n      message: \"Your response has been recorded successfully!\",\n      onClose: () => setIsSuccessModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(FormPage, \"iK/q7JQNouI2fhFPmTA7iZsHgME=\");\n_c = FormPage;\nvar _c;\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"names":["React","useState","QuestionSection","SuccessModal","jsxDEV","_jsxDEV","FormPage","_s","formData","setFormData","email","askedQuestion","question","industry","company","year","receivedQuestion","isSuccessModalOpen","setIsSuccessModalOpen","handleChange","section","field","value","prev","handleSubmit","e","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","placeholder","title","data","Date","getFullYear","message","onClose","_c","$RefreshReg$"],"sources":["C:/Users/dhire/mock-vani/mock-vani-interview-survey-app/client/src/components/FormPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport QuestionSection from \"./QuestionSection\";\r\nimport SuccessModal from \"./SuccessModal\";\r\nimport \"../styles/FormPage.css\"; // Import specific styles\r\n\r\nexport default function FormPage() {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    askedQuestion: { question: \"\", industry: \"\", company: \"\", year: \"\" },\r\n    receivedQuestion: { question: \"\", industry: \"\", company: \"\", year: \"\" },\r\n  });\r\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\r\n\r\n  const handleChange = (section, field, value) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [section]: {\r\n        ...prev[section],\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Form Submitted\", formData); // Replace with API call\r\n    setIsSuccessModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-page\">\r\n      <header className=\"form-header\">\r\n        <h1>Mock Vani Interview Survey</h1>\r\n        <p>Share the most interesting interview questions youâ€™ve encountered!</p>\r\n      </header>\r\n\r\n      <main className=\"form-container\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-section\">\r\n            <label>Email Address</label>\r\n            <input\r\n              type=\"email\"\r\n              value={formData.email}\r\n              onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n              placeholder=\"Enter your email\"\r\n            />\r\n          </div>\r\n\r\n          <QuestionSection\r\n            title=\"As an Interviewer\"\r\n            section=\"askedQuestion\"\r\n            data={formData.askedQuestion}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <QuestionSection\r\n            title=\"As an Interviewee\"\r\n            section=\"receivedQuestion\"\r\n            data={formData.receivedQuestion}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <button type=\"submit\" className=\"submit-button\">\r\n            Submit Responses\r\n          </button>\r\n        </form>\r\n      </main>\r\n\r\n      <footer className=\"form-footer\">\r\n        <p>&copy; {new Date().getFullYear()} Mock Vani. All rights reserved.</p>\r\n      </footer>\r\n\r\n      {isSuccessModalOpen && (\r\n        <SuccessModal\r\n          message=\"Your response has been recorded successfully!\"\r\n          onClose={() => setIsSuccessModalOpen(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}